{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["web3","Web3","window","ethereum","App","Component","componentWillMount","loadBlockchainData","props","dispatch","eth","net","getId","getAccounts","accounts","getBalance","balance","setState","account","alert","govToken","Contract","Govtoken","abi","dkp","Dkp","router","Router","factory","Factory","pool","Pool","swap","Swap","lpToken","Erc20","token","address","update","e","console","log","state","methods","getRate","call","rate","getLP","utils","toWei","lpPerOne","getPair","pairAddress","pair","Pair","getReserves","reserves","fromWei","toString","deposit","amount","send","value","from","tokenIn","tokenOut","getAmountOutMin","amountOutMin","constructor","super","this","render","className","href","target","rel","Math","round","role","Tabs","defaultActiveKey","id","Tab","eventKey","title","onSubmit","preventDefault","depositAmount","step","type","ref","input","placeholder","required","swapAmount","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uqpUAcA,MAAMA,EAAO,IAAIC,IAAKC,OAAOC,UAE7B,MAAMC,UAAYC,YAEVC,qBAAsB,IAAD,kIACnB,EAAKC,mBAAmB,EAAKC,MAAMC,UADhB,6CAIrBF,mBAAmBE,GAAW,IAAD,6IACF,qBAApBP,OAAOC,SADe,wBAEzBH,EAAO,IAAIC,IAAKC,OAAOC,UAFE,SAGXH,EAAKU,IAAIC,IAAIC,QAHF,8BAIRZ,EAAKU,IAAIG,cAJD,UAOJ,qBAHrBC,EAJyB,QAOX,GAPW,kCAQPd,EAAKU,IAAIK,WAAWD,EAAS,IARtB,QAQvBE,EARuB,OAS7B,EAAKC,SAAS,CAAEC,QAASJ,EAAS,GAAIE,QAASA,EAAShB,KAAMA,IATjC,wBAW7BE,OAAOiB,MAAM,8BAXgB,QAe/B,IACQC,EAAW,IAAIpB,EAAKU,IAAIW,SAASC,EAASC,IAAK,8CAC/CC,EAAM,IAAIxB,EAAKU,IAAIW,SAASI,EAAIF,IAAK,8CACrCG,EAAS,IAAI1B,EAAKU,IAAIW,SAASM,EAAOJ,IAAK,8CAC3CK,EAAU,IAAI5B,EAAKU,IAAIW,SAASQ,EAAQN,IAAK,8CAC7CO,EAAO,IAAI9B,EAAKU,IAAIW,SAASU,EAAKR,IAAK,8CACvCS,EAAO,IAAIhC,EAAKU,IAAIW,SAASY,EAAKV,IAAK,8CACvCW,EAAU,IAAIlC,EAAKU,IAAIW,SAASc,EAAMZ,IAAK,8CAE9B,6CAEnB,EAAKN,SAAS,CAAEmB,MAAOhB,EAAUI,IAAKA,EAAKE,OAAQA,EAAQE,QAASA,EAASE,KAAMA,EAAME,KAAMA,EAAME,QAASA,EAASG,QAFpG,+CAGnB,EAAKC,SACL,MAAOC,GACPC,QAAQC,IAAI,QAASF,GACrBrC,OAAOiB,MAAM,iDA9BgB,wBAkC/BjB,OAAOiB,MAAM,2BAlCkB,8CAsC7BmB,SAAU,IAAD,kJACS,EAAKI,MAAM1C,KAAKU,IAAIK,WAAW,EAAK2B,MAAMxB,SADnD,cACPF,EADO,gBAEM,EAAK0B,MAAMlB,IAAImB,QAAQC,UAAUC,OAFvC,cAEPC,EAFO,gBAGU,EAAKJ,MAAMlB,IAAImB,QAAQI,MAAM,EAAKL,MAAM1C,KAAKgD,MAAMC,MAAM,MAAMJ,OAHzE,cAGPK,EAHO,iBAKa,EAAKR,MAAMd,QAAQe,QAAQQ,QAAQ,6CAA8C,8CAA8CN,OAL5I,eAKPO,EALO,OAMbZ,QAAQC,IAAIW,GACNC,EAAO,IAAIrD,EAAKU,IAAIW,SAASiC,EAAK/B,IAAK6B,GAPhC,UAQUC,EAAKV,QAAQY,cAAcV,OARrC,QAQPW,EARO,OASbhB,QAAQC,IAAIe,GAEZhB,QAAQC,IACN,EAAKC,MAAM1C,KAAKgD,MAAMS,QAAQzC,EAAQ0C,YAAc,KAAO,EAAKhB,MAAM1C,KAAKgD,MAAMS,QAAQX,EAAKY,YAAc,KAAO,EAAKhB,MAAM1C,KAAKgD,MAAMS,QAAQP,EAASQ,aAZ/I,8CAeTC,QAAQC,GAAS,IAAD,qHACG,cAAnB,EAAKlB,MAAMlB,IADK,yCAGV,EAAKkB,MAAMlB,IAAImB,QAAQgB,UAAUE,KAAK,CAC1CC,MAAO,EAAKpB,MAAM1C,KAAKgD,MAAMC,MAAMW,EAAOF,YAC1CK,KAAM,EAAKrB,MAAMxB,UALH,sDAQhBsB,QAAQC,IAAI,mBAAZ,MARgB,0DAahBT,KAAKgC,EAASC,EAAUL,GAAS,IAAD,wIAEX,EAAKlB,MAAMV,KAAKW,QAAQuB,gBAAgBF,EAASC,EAAUjE,EAAKgD,MAAMC,MAAMW,EAAOF,aAAab,OAFrF,OAGpCsB,EAA+B,IAD3BA,EAFgC,QAGC,IACrC3B,QAAQC,IAAIzC,EAAKgD,MAAMS,QAAQU,EAAaT,aAJR,6CAiBtCU,YAAY5D,GACV6D,MAAM7D,GACN8D,KAAK5B,MAAQ,CACX1C,KAAM,YACNkB,QAAS,GACTkB,MAAO,KACPZ,IAAK,KACLR,QAAS,EACTqB,QAAS,KACTX,OAAQ,KACRE,QAAS,KACTE,KAAM,KACNE,KAAM,KACNE,QAAS,MAIbqC,SACE,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,kEACb,uBACEA,UAAU,sCACVC,KAAK,yCACLC,OAAO,SACPC,IAAI,uBAEJ,6BACA,oCAGF,6BACA,mCAASC,KAAKC,MAA0D,IAApD7E,EAAKgD,MAAMS,QAAQa,KAAK5B,MAAM1B,QAAQ0C,aAAqB,MAE/E,6BACA,2BAAIY,KAAK5B,MAAMxB,WAGjB,yBAAKsD,UAAU,oCACb,6BACA,sDAEA,6BACA,yBAAKA,UAAU,OACb,0BAAMM,KAAK,OAAON,UAAU,gCAC1B,yBAAKA,UAAU,2BACb,kBAACO,EAAA,EAAD,CAAMC,iBAAiB,UAAUC,GAAG,4BAClC,kBAACC,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAC5B,6BACE,6BADF,oCAGE,6BAHF,0BAKE,6BACA,0BAAMC,SAAW9C,IACfA,EAAE+C,iBACF,IAAI1B,EAASU,KAAKiB,cAAczB,MAChCQ,KAAKX,QAAQC,KAEb,yBAAKY,UAAU,sBACb,6BACA,2BACES,GAAG,gBACHO,KAAK,OACLC,KAAK,SACLC,IAAMC,IAAYrB,KAAKiB,cAAgBI,GACvCnB,UAAU,+BACVoB,YAAY,YACZC,UAAQ,KAGZ,4BAAQJ,KAAK,SAASjB,UAAU,mBAAhC,cAKN,kBAACU,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,QACvB,gDAEE,0BAAMC,SAAW9C,IACjBA,EAAE+C,iBACF,IAAI1B,EAASU,KAAKwB,WAAWhC,MAG7BQ,KAAKtC,KAFS,6CACC,6CACc4B,KAE7B,yBAAKY,UAAU,sBACb,6BACA,2BACES,GAAG,aACHO,KAAK,OACLC,KAAK,SACLC,IAAMC,IAAYrB,KAAKwB,WAAaH,GACpCnB,UAAU,+BACVoB,YAAY,YACZC,UAAQ,IACR,6BAEA,6BACA,2BACAZ,GAAG,aACHO,KAAK,OACLC,KAAK,SACLC,IAAMC,IAAYrB,KAAKwB,WAAaH,GACpCnB,UAAU,+BACVoB,YAAY,cACZC,UAAQ,KAEZ,4BAAQJ,KAAK,SAASjB,UAAU,mBAAhC,kBAcTpE,QCvNK2F,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2DCZNC,IAAS5B,OAAO,kBAAC,EAAD,MAAS6B,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,iB","file":"static/js/main.98859af4.chunk.js","sourcesContent":["import { Tabs, Tab } from 'react-bootstrap'\r\nimport Dkp from '../abis/DKPContract.json'\r\nimport Govtoken from '../abis/Govtoken.json'\r\nimport Router from '../abis/Router.json'\r\nimport Factory from '../abis/Factory.json'\r\nimport Pair from '../abis/Pair.json'\r\nimport Erc20 from '../abis/ERC20.json'\r\nimport Pool from '../abis/Pool.json'\r\nimport Swap from '../abis/Swap.json'\r\nimport React, { Component } from 'react';\r\n\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\nconst web3 = new Web3(window.ethereum)\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)\r\n  }\r\n\r\n  async loadBlockchainData(dispatch) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      const web3 = new Web3(window.ethereum)\r\n      const netId = await web3.eth.net.getId()\r\n      const accounts = await web3.eth.getAccounts()\r\n\r\n      //load balance\r\n      if (typeof accounts[0] !== 'undefined') {\r\n        const balance = await web3.eth.getBalance(accounts[0])\r\n        this.setState({ account: accounts[0], balance: balance, web3: web3 })\r\n      } else {\r\n        window.alert('Please login with MetaMask')\r\n      }\r\n\r\n      //load contracts\r\n      try {\r\n        const govToken = new web3.eth.Contract(Govtoken.abi, '0x1DF82Bfb54A8134Fd34A02E51Af788d97b072a7F')\r\n        const dkp = new web3.eth.Contract(Dkp.abi, '0x837C626dF66Ab6179143bdB18D1DD1a2618aE7e6')\r\n        const router = new web3.eth.Contract(Router.abi, '0x24ad62502d1C652Cc7684081169D04896aC20f30')\r\n        const factory = new web3.eth.Contract(Factory.abi, '0x9014B937069918bd319f80e8B3BB4A2cf6FAA5F7')\r\n        const pool = new web3.eth.Contract(Pool.abi, '0xDB30643c71aC9e2122cA0341ED77d09D5f99F924')\r\n        const swap = new web3.eth.Contract(Swap.abi, '0x72885b5066424eCC1DE4A5a3EF8c377de07a467A')\r\n        const lpToken = new web3.eth.Contract(Erc20.abi, '0xEb579ddcD49A7beb3f205c9fF6006Bb6390F138f')\r\n\r\n        const dkpAddress = '0x837C626dF66Ab6179143bdB18D1DD1a2618aE7e6'\r\n\r\n        this.setState({ token: govToken, dkp: dkp, router: router, factory: factory, pool: pool, swap: swap, lpToken: lpToken, address: dkpAddress })\r\n        this.update()\r\n      } catch (e) {\r\n        console.log('Error', e)\r\n        window.alert('Contracts not deployed to the current network')\r\n      }\r\n\r\n    } else {\r\n      window.alert('Please install MetaMask')\r\n    }\r\n  }\r\n\r\n  async update() {\r\n    const balance = await this.state.web3.eth.getBalance(this.state.account)\r\n    const rate = await this.state.dkp.methods.getRate().call()\r\n    const lpPerOne = await this.state.dkp.methods.getLP(this.state.web3.utils.toWei('1')).call()\r\n\r\n    const pairAddress = await this.state.factory.methods.getPair('0x72Cb10C6bfA5624dD07Ef608027E366bd690048F', '0x1DF82Bfb54A8134Fd34A02E51Af788d97b072a7F').call()\r\n    console.log(pairAddress)\r\n    const pair = new web3.eth.Contract(Pair.abi, pairAddress)\r\n    const reserves = await pair.methods.getReserves().call()\r\n    console.log(reserves)\r\n\r\n    console.log(\r\n      this.state.web3.utils.fromWei(balance.toString()) + \"\\n\" + this.state.web3.utils.fromWei(rate.toString()) + \"\\n\" + this.state.web3.utils.fromWei(lpPerOne.toString()))\r\n  }\r\n\r\n  async deposit(amount) {\r\n    if (this.state.dkp !== 'undefined') {\r\n      try {\r\n        await this.state.dkp.methods.deposit().send({ \r\n          value: this.state.web3.utils.toWei(amount.toString()), \r\n          from: this.state.account \r\n        })\r\n      } catch (e) {\r\n        console.log('Error, deposit: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  async swap(tokenIn, tokenOut, amount) {\r\n\r\n    let amountOutMin = await this.state.swap.methods.getAmountOutMin(tokenIn, tokenOut, web3.utils.toWei(amount.toString())).call()\r\n    amountOutMin = (amountOutMin * 99) / 100\r\n    console.log(web3.utils.fromWei(amountOutMin.toString()))\r\n    /* try {\r\n      await this.state.swap.methods.swap(tokenIn, tokenOut, web3.utils.toWei(amount.toString()), amountOutMin.toString(), this.state.account, web3.utils.toWei('60000')).send({\r\n        //value: this.state.web3.utils.toWei(amount.toString()),\r\n        from: this.state.account,\r\n        gasPrice: await web3.eth.getGasPrice(),\r\n        gasLimit: 210000\r\n      })\r\n    } catch (e) {\r\n      console.log('Error, swap: ', e)\r\n    } */\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      web3: 'undefined',\r\n      account: '',\r\n      token: null,\r\n      dkp: null,\r\n      balance: 0,\r\n      address: null,\r\n      router: null,\r\n      factory: null,\r\n      pool: null,\r\n      swap: null,\r\n      lpToken: null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='text-monospace'>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div>\r\n            <b>DKP</b>\r\n            </div>\r\n          </a>\r\n          <div>\r\n          <b>One: {Math.round(web3.utils.fromWei(this.state.balance.toString()) * 100) / 100}</b>\r\n          </div>\r\n          <div>\r\n          <b>{this.state.account}</b>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5 text-center\">\r\n          <br></br>\r\n          <h1>Welcome to DK Protocol</h1>\r\n          \r\n          <br></br>\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                  <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                    <div>\r\n                      <br></br>\r\n                      How much One do you want to swap?\r\n                      <br></br>\r\n                      (min. amount is 10 One)\r\n                      <br></br>\r\n                      <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        let amount = this.depositAmount.value\r\n                        this.deposit(amount)\r\n                      }}>\r\n                        <div className='form-group mr-sm-2'>\r\n                          <br></br>\r\n                          <input\r\n                            id='depositAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.depositAmount = input }}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='amount...'\r\n                            required />\r\n                            \r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>DEPOSIT</button>\r\n                      </form>\r\n\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab eventKey=\"swap\" title=\"Swap\">\r\n                      <div>\r\n                        Swap tokens here\r\n                        <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        let amount = this.swapAmount.value\r\n                        let tokenIn = '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a'\r\n                        let tokenOut = '0x72Cb10C6bfA5624dD07Ef608027E366bd690048F'\r\n                        this.swap(tokenIn, tokenOut, amount)\r\n                      }}>\r\n                        <div className='form-group mr-sm-2'>\r\n                          <br></br>\r\n                          <input\r\n                            id='swapAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.swapAmount = input }}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='amount...'\r\n                            required />\r\n                            <br></br>\r\n                            \r\n                            <br></br>\r\n                            <input\r\n                            id='swapAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.swapAmount = input }}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='received...'\r\n                            required />\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>Swap</button>\r\n                      </form>\r\n                      </div>\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}