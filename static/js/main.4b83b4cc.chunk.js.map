{"version":3,"sources":["Logo.png","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","web3","Web3","window","ethereum","App","Component","componentWillMount","loadBlockchainData","props","dispatch","eth","getAccounts","accounts","document","querySelector","ethereumButton","addEventListener","disabled","getAccount","getBalance","balance","setState","account","connected","alert","govToken","Contract","Govtoken","abi","dkp","Dkp","router","Router","factory","Factory","pool","Pool","swap","Swap","lpToken","Erc20","staker","Stake","dkpAddress","methods","getRate","call","currentRate","getLP","utils","toWei","currentLp","balanceOf","stakeBalance","totalSupply","xSupply","xRate","allowance","state","allowed","xAllowed","xAmount","token","address","rate","fromWei","toString","lp","console","log","request","method","update","lpPerOne","getPair","pairAddress","pair","Pair","getReserves","reserves","deposit","amount","send","value","from","tokenIn","tokenOut","getAmountOutMin","amountOutMin","stake","unStake","approveStake","approve","approveUnstake","constructor","super","this","xvalue","render","className","href","target","rel","Math","round","role","Tabs","defaultActiveKey","id","Tab","eventKey","title","onSubmit","e","preventDefault","depositAmount","step","type","ref","input","onChange","placeholder","required","floor","stakeAmount","onClick","unstakeAmount","swapAmount","src","logo","alt","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b83b4cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.5394859b.png\";","import { Tabs, Tab } from 'react-bootstrap'\r\nimport Dkp from '../abis/DKPContract.json'\r\nimport Govtoken from '../abis/Govtoken.json'\r\nimport Router from '../abis/Router.json'\r\nimport Factory from '../abis/Factory.json'\r\nimport Pair from '../abis/Pair.json'\r\nimport Erc20 from '../abis/Erc20.json'\r\nimport Pool from '../abis/Pool.json'\r\nimport Swap from '../abis/Swap.json'\r\nimport Stake from '../abis/Stake.json'\r\nimport React, {  Component } from 'react';\r\n\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport logo from '../Logo.png'\r\n\r\nconst web3 = new Web3(window.ethereum)\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadBlockchainData(this.props.dispatch)\r\n  }\r\n\r\n  async loadBlockchainData(dispatch) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      const web3 = new Web3(window.ethereum)\r\n      //const netId = await web3.eth.net.getId()\r\n      const accounts = await web3.eth.getAccounts()\r\n      if (document.querySelector('.enableEthereumButton') !== null) {\r\n        const ethereumButton = document.querySelector('.enableEthereumButton')\r\n        ethereumButton.addEventListener('click', () => {\r\n          ethereumButton.disabled = true\r\n          this.getAccount()\r\n        })\r\n      }\r\n      //load balance\r\n      if (typeof accounts[0] !== 'undefined') {\r\n        const balance = await web3.eth.getBalance(accounts[0])\r\n        this.setState({ account: accounts[0], balance: balance, web3: web3, connected: true })\r\n\r\n      } else {\r\n        window.alert('Please login with MetaMask')\r\n      }\r\n\r\n      //load contracts\r\n      try {\r\n        const govToken = new web3.eth.Contract(Govtoken.abi, '0x1DF82Bfb54A8134Fd34A02E51Af788d97b072a7F')\r\n        const dkp = new web3.eth.Contract(Dkp.abi, '0x837C626dF66Ab6179143bdB18D1DD1a2618aE7e6')\r\n        const router = new web3.eth.Contract(Router.abi, '0x24ad62502d1C652Cc7684081169D04896aC20f30')\r\n        const factory = new web3.eth.Contract(Factory.abi, '0x9014B937069918bd319f80e8B3BB4A2cf6FAA5F7')\r\n        const pool = new web3.eth.Contract(Pool.abi, '0xDB30643c71aC9e2122cA0341ED77d09D5f99F924')\r\n        const swap = new web3.eth.Contract(Swap.abi, '0x72885b5066424eCC1DE4A5a3EF8c377de07a467A')\r\n        const lpToken = new web3.eth.Contract(Erc20.abi, '0xEb579ddcD49A7beb3f205c9fF6006Bb6390F138f')\r\n        const staker = new web3.eth.Contract(Stake.abi, '0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C')\r\n\r\n        const dkpAddress = '0x837C626dF66Ab6179143bdB18D1DD1a2618aE7e6'\r\n\r\n        const currentRate = await dkp.methods.getRate().call()\r\n        const currentLp = await dkp.methods.getLP(web3.utils.toWei('1')).call()\r\n        const stakeBalance = await govToken.methods.balanceOf('0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C').call()\r\n        const xSupply = await staker.methods.totalSupply().call()\r\n        const xRate = stakeBalance / xSupply\r\n\r\n        const allowed = await govToken.methods.allowance(this.state.account, '0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C').call()\r\n        const xAllowed = await staker.methods.allowance(this.state.account, '0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C').call()\r\n        const xAmount = await staker.methods.balanceOf(this.state.account).call()\r\n\r\n        this.setState({\r\n          token: govToken, dkp: dkp, router: router, factory: factory, pool: pool, swap: swap, lpToken: lpToken, address: dkpAddress,\r\n          rate: web3.utils.fromWei(currentRate.toString()),\r\n          lp: web3.utils.fromWei(currentLp.toString()),\r\n          allowed: web3.utils.fromWei(allowed.toString()), \r\n          xAllowed: web3.utils.fromWei(xAllowed.toString()), \r\n          staker: staker, xRate: xRate, xAmount: xAmount\r\n        })\r\n      } catch (e) {\r\n        console.log('Error', e)\r\n        window.alert('Contracts not deployed to the current network')\r\n      }\r\n\r\n    } else {\r\n      window.alert('Please install MetaMask')\r\n    }\r\n  }\r\n\r\n  async getAccount() {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n    this.componentWillMount()\r\n  }\r\n\r\n  async update() {\r\n    const balance = await this.state.web3.eth.getBalance(this.state.account)\r\n    const rate = await this.state.dkp.methods.getRate().call()\r\n    const lpPerOne = await this.state.dkp.methods.getLP(this.state.web3.utils.toWei('1')).call()\r\n\r\n    const pairAddress = await this.state.factory.methods.getPair('0x72Cb10C6bfA5624dD07Ef608027E366bd690048F', '0x1DF82Bfb54A8134Fd34A02E51Af788d97b072a7F').call()\r\n    console.log(pairAddress)\r\n    const pair = new web3.eth.Contract(Pair.abi, pairAddress)\r\n    const reserves = await pair.methods.getReserves().call()\r\n    console.log(reserves)\r\n\r\n    console.log(\r\n      this.state.web3.utils.fromWei(balance.toString()) + \"\\n\" + this.state.web3.utils.fromWei(rate.toString()) + \"\\n\" + this.state.web3.utils.fromWei(lpPerOne.toString()))\r\n  }\r\n\r\n  async deposit(amount) {\r\n    if (this.state.dkp !== 'undefined') {\r\n      try {\r\n        await this.state.dkp.methods.deposit().send({\r\n          value: this.state.web3.utils.toWei(amount.toString()),\r\n          from: this.state.account\r\n        })\r\n      } catch (e) {\r\n        console.log('Error, deposit: ', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  async swap(tokenIn, tokenOut, amount) {\r\n\r\n    let amountOutMin = await this.state.swap.methods.getAmountOutMin(tokenIn, tokenOut, web3.utils.toWei(amount.toString())).call()\r\n    amountOutMin = (amountOutMin * 99) / 100\r\n    console.log(web3.utils.fromWei(amountOutMin.toString()))\r\n    /* try {\r\n      await this.state.swap.methods.swap(tokenIn, tokenOut, web3.utils.toWei(amount.toString()), amountOutMin.toString(), this.state.account, web3.utils.toWei('60000')).send({\r\n        //value: this.state.web3.utils.toWei(amount.toString()),\r\n        from: this.state.account,\r\n        gasPrice: await web3.eth.getGasPrice(),\r\n        gasLimit: 210000\r\n      })\r\n    } catch (e) {\r\n      console.log('Error, swap: ', e)\r\n    } */\r\n  }\r\n\r\n  async stake(amount) {\r\n    try {\r\n      await this.state.staker.methods.stake(amount).send({\r\n        from: this.state.account\r\n      })\r\n    } catch (e) {\r\n      console.log('Error, deposit: ', e)\r\n    }\r\n  }\r\n\r\n  async unStake(amount) {\r\n    try {\r\n      await this.state.staker.methods.unStake(amount).send({\r\n        from: this.state.account\r\n      })\r\n    } catch (e) {\r\n      console.log('Error, deposit: ', e)\r\n    }\r\n  }\r\n\r\n  async approveStake() {\r\n    let approve_amount = '115792089237316195423570985008687907853269984665640564039457584007913129639935'; //(2^256 - 1 )\r\n    await this.state.token.methods.approve('0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C', approve_amount).send({from: this.state.account})\r\n    const allowed = await this.state.token.methods.allowance(this.state.account, '0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C').call()\r\n    this.setState({allowed: allowed})\r\n  }\r\n\r\n  async approveUnstake() {\r\n    let approve_amount = '115792089237316195423570985008687907853269984665640564039457584007913129639935'; //(2^256 - 1 )\r\n    await this.state.staker.methods.approve('0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C', approve_amount).send({from: this.state.account})\r\n    const xAllowed = await this.state.staker.methods.allowance(this.state.account, '0xEF356871b5ad2e1457C832ABC0B06173A33a9B8C').call()\r\n    this.setState({xAllowed: xAllowed})\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      web3: 'undefined',\r\n      connected: false,\r\n      account: '',\r\n      token: null,\r\n      dkp: null,\r\n      balance: 0,\r\n      address: null,\r\n      router: null,\r\n      factory: null,\r\n      pool: null,\r\n      swap: null,\r\n      lpToken: null,\r\n      rate: '',\r\n      lp: '',\r\n      value: 0,\r\n      xvalue: 0,\r\n      staker: null,\r\n      allowed: 0,\r\n      xAllowed: 0,\r\n      xRate: 1,\r\n      xAmount: 0\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='text-monospace'>\r\n        <nav className=\"navbar fixed-top flex-md-nowrap p-0\">\r\n          <a\r\n            className=\"navbar navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"https://dexscreener.com/harmony/0x8766079a62ea0bd58cb3fd98c006a9321c3009c6\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <div>\r\n              <b>DKP</b>\r\n            </div>\r\n          </a>\r\n          <div className='navbar-brand'>\r\n            <b>One: {Math.round(web3.utils.fromWei(this.state.balance.toString()) * 100) / 100}</b>\r\n          </div>\r\n          <div className='navbar-brand smaller'>\r\n            <b>{this.state.account === \"\" ?\r\n              <button className=\"enableEthereumButton btn btn-light\">Connect</button> :\r\n              this.state.account\r\n            }</b>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container-fluid mt-4 text-center\">\r\n          <br></br>\r\n          <h1>DK Protocol</h1>\r\n\r\n          <br></br>\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content col-lg-3 ml-auto mr-auto\">\r\n                <Tabs defaultActiveKey=\"deposit\" id=\"uncontrolled-tab-example\">\r\n                  <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                    <div>\r\n                      <br></br>\r\n                      How much One do you want to deposit?\r\n                      <br></br>\r\n                      (Minimum is 10 One)\r\n                      <br></br>\r\n                      <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        let amount = this.depositAmount.value\r\n                        this.deposit(amount)\r\n                      }}>\r\n                        <div className='form-group'>\r\n                          <br></br>\r\n                          <input\r\n                            id='depositAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.depositAmount = input }}\r\n                            onChange={e => this.setState({ value: e.target.value })}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='amount...'\r\n                            required />\r\n\r\n                        </div>\r\n                        <div>\r\n                          Expected mint amount: {Math.floor(((this.state.value * this.state.lp) / this.state.rate) * 10000) / 10000}\r\n                        </div>\r\n                        <div>\r\n                          LP created per One: {Math.floor(this.state.lp * 10000) / 10000}\r\n                        </div>\r\n                        <div>\r\n                          Mint Rate: {this.state.rate}\r\n                        </div>\r\n                        <button type='submit' className='btn btn-light mt-2'>DEPOSIT</button>\r\n                      </form>\r\n\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab eventKey=\"stake\" title=\"Stake\">\r\n                    <div>\r\n                      <b>Stake tokens here</b>\r\n                      <br></br>\r\n                      xDKP Rate: {Math.floor(this.state.xRate * 10000) / 10000}\r\n                      <br></br>\r\n                      xDKP Amount: {Math.floor(web3.utils.fromWei(this.state.xAmount.toString()) * 100) / 100}\r\n                      <form onSubmit={(e) => {\r\n                        e.preventDefault()                      \r\n                      }}>\r\n                        <div className='form-group'>\r\n                          <br></br>\r\n                          <input\r\n                            id='stakeAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.stakeAmount = input }}\r\n                            onChange={e => this.setState({ value: e.target.value })}\r\n                            className=\"form-control form-control-md mt-1\"\r\n                            placeholder='amount...'\r\n                             />\r\n                          <br></br>\r\n                          {this.state.allowed <= 1000 ?\r\n                          <button onClick={() => this.approveStake()} className='btn btn-light mt-1 mb-2'>Approve</button>:\r\n                          <button onClick={() => this.stake(web3.utils.toWei(this.stakeAmount.value.toString()))} className='btn btn-light mt-1 mb-2'>Stake</button>\r\n                          }\r\n                          <br></br>\r\n                          {this.state.value > 0 ?\r\n                          \"xDKP gotten: \" + Math.floor((this.state.value / this.state.xRate) * 10000) / 10000:\r\n                          \"\"}\r\n\r\n                          <br></br>\r\n                          <input\r\n                            id='unstakeAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.unstakeAmount = input }}\r\n                            onChange={e => this.setState({ xvalue: e.target.value })}\r\n                            className=\"form-control form-control-md mt-1\"\r\n                            placeholder='amount...'\r\n                             />\r\n                             <br></br>\r\n                        {this.state.xAllowed <= 1000 ?\r\n                          <button onClick={() => this.approveUnstake()} className='btn btn-light mt-1 mb-2'>Approve</button>:\r\n                          <button onClick={() => this.unStake(web3.utils.toWei(this.unstakeAmount.value.toString()))} className='btn btn-light mt-1 mb-2'>Unstake</button>\r\n                        }\r\n                          <br></br>\r\n                          {this.state.xvalue > 0 ?\r\n                          \"DKP returned: \" + Math.floor((this.state.xvalue * this.state.xRate) * 10000) / 10000:\r\n                          \"\"}\r\n                          </div>\r\n                      </form>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab eventKey=\"swap\" title=\"Swap\">\r\n                    <div>\r\n                      Swap tokens here\r\n                      <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        let amount = this.swapAmount.value\r\n                        let tokenIn = '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a'\r\n                        let tokenOut = '0x72Cb10C6bfA5624dD07Ef608027E366bd690048F'\r\n                        this.swap(tokenIn, tokenOut, amount)\r\n                      }}>\r\n                        <div className='form-group'>\r\n                          <br></br>\r\n                          <input\r\n                            id='swapAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.swapAmount = input }}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='amount...'\r\n                            required />\r\n                          <br></br>\r\n\r\n                          <br></br>\r\n                          <input\r\n                            id='swapAmount'\r\n                            step=\"0.01\"\r\n                            type='number'\r\n                            ref={(input) => { this.swapAmount = input }}\r\n                            className=\"form-control form-control-md\"\r\n                            placeholder='received...'\r\n                            required />\r\n                        </div>\r\n                        <button type='submit' className='btn btn-light mt-2'>Swap</button>\r\n                      </form>\r\n                    </div>\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"transactions\" title=\"Transactions\">\r\n                    <div>\r\n                      Placeholder\r\n                      \r\n                    </div>\r\n                  </Tab> */}\r\n                </Tabs>\r\n              </div>\r\n            </main>\r\n          </div>\r\n          <div className='logo fixed-bottom'>\r\n            <img className=\"logo mb-5\" src={logo} alt=\"Logo\"></img>\r\n          </div>\r\n            <nav className=\"navbar fixed-bottom flex-md-nowrap p-0 shadow text-center\">\r\n              <div className=\"navbar-brand col-sm-3 col-md-2 mr-auto ml-auto text-center\">\r\n                DKP\r\n              </div>\r\n            </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}